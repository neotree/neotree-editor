"use strict";exports.id=2418,exports.ids=[2418],exports.modules={22418:(e,t,r)=>{r.d(t,{U5:()=>p,Ms:()=>w,Nq:()=>L,hA:()=>Z,E8:()=>m,$s:()=>b,cj:()=>h,Lr:()=>I});var i=r(60938),a=r(57745),s=r(81445),d=r(9576),u=r(57435),n=r(10413),l=r(93567),o=r(88317),y=r(30834),g=r(10970),f=r(927);async function m({keys:e}){try{let t=await (0,f.uK)({types:["drugs","fluids","feeds"],returnDraftsIfExist:!0}),r=[];return t.data.forEach(t=>{let i=t.drugs.filter(t=>!e.includes(t.key)),a=t.fluids.filter(t=>!e.includes(t.key)),s=t.feeds.filter(t=>!e.includes(t.key));i.length!==t.drugs.length&&r.push({...t,drugs:i}),a.length!==t.fluids.length&&r.push({...t,fluids:a}),s.length!==t.feeds.length&&r.push({...t,feeds:s})}),r.length&&await (0,g.uD)({data:r}),{data:{success:!0}}}catch(e){return{errors:[e.message],data:{success:!1}}}}let c=async(e,t=1,r="")=>{let[{count:s}]=await n.Z.select({count:(0,i.QX)()}).from(l.drugsLibraryDrafts).where((0,a.eq)(l.drugsLibraryDrafts.key,e)),[{count:d}]=await n.Z.select({count:(0,i.QX)()}).from(l.drugsLibrary).where((0,a.eq)(l.drugsLibrary.key,e));return d||s?await c(`${r||e}-${t+1}`,t+1,r||e):e};async function p({data:e,...t}){try{let{data:r}=await (0,y.fP)({itemsIds:e.map(e=>e.itemId)}),i=[];for(let e of r){let t=await c(e.key);i.push({...e,key:t,itemId:d.Z(),position:void 0,createdAt:void 0,updatedAt:void 0,deletedAt:void 0,publishDate:void 0,id:void 0})}return await b({data:i,...t})}catch(e){return u.Z.error("_copyDrugsLibraryItems ERROR",e.message),{success:!1,errors:[e.message]}}}async function h({data:e,broadcastAction:t}){try{let r=e.map(e=>e.key).filter(e=>e);if(r.length){let i=await (0,y.fP)({keys:r});if((e=e.filter(e=>!i.data.map(e=>e.key).includes(e.key)).map(e=>({...e,itemId:void 0,createdAt:void 0,updatedAt:void 0,deletedAt:void 0,publishDate:void 0,id:void 0,position:void 0,version:void 0}))).length)return await b({data:e,broadcastAction:t})}return{success:!0}}catch(e){return u.Z.error("_saveDrugsLibraryItemsIfKeysNotExist ERROR",e.message),{errors:[e.message],success:!1}}}async function I({data:e,broadcastAction:t}){try{let r=e.map(e=>e.key).filter(e=>e);if(r.length){let i=await (0,y.fP)({keys:r});if((e=e.map(e=>{let t=i.data.find(t=>`${t.key}`.toLowerCase()===`${e.key}`.toLowerCase());return{...e,itemId:t?.itemId||e.itemId,createdAt:t?.createdAt||e.createdAt,updatedAt:t?.updatedAt||e.updatedAt,deletedAt:t?.deletedAt||e.deletedAt,publishDate:t?.publishDate||e.publishDate,id:t?.id||e.id,position:t?.position||e.position,version:t?.version||e.version}})).length)return await b({data:e,broadcastAction:t})}return{success:!0}}catch(e){return u.Z.error("_saveDrugsLibraryItemsAndUpdateIfExists ERROR",e.message),{errors:[e.message],success:!1}}}async function b({data:e,broadcastAction:t}){let r={success:!1};try{let t=[],i=[],u=[];for(let{itemId:r,...o}of e)try{let e=r||d.Z(),y="",g=o.key||"",f=null,m=o.type||null;if(!t.length){let t=r?await n.Z.query.drugsLibraryDrafts.findFirst({where:(0,a.eq)(l.drugsLibraryDrafts.itemDraftId,e)}):null,d=t||!r?null:await n.Z.query.drugsLibrary.findFirst({where:(0,a.eq)(l.drugsLibrary.itemId,e)});if(t){y=t.data.key,f=t.data.type||null;let r={...t.data,...o};await n.Z.update(l.drugsLibraryDrafts).set({data:r,position:r.position}).where((0,a.eq)(l.drugsLibraryDrafts.itemDraftId,e))}else{y=d?.key||"",f=d?.type||null;let t=o.position||d?.position;if(!t){let e=await n.Z.query.drugsLibrary.findFirst({columns:{position:!0},orderBy:(0,s.C)(l.drugsLibrary.position)}),r=await n.Z.query.drugsLibraryDrafts.findFirst({columns:{position:!0},orderBy:(0,s.C)(l.drugsLibraryDrafts.position)});t=Math.max(0,e?.position||0,r?.position||0)+1}let r={...d,...o,itemId:e,version:d?.version?d.version+1:1,position:t};await n.Z.insert(l.drugsLibraryDrafts).values({data:r,itemDraftId:e,position:r.position,itemId:d?.itemId,key:r.key,type:r.type})}y&&g&&y!==g&&i.push({old:y,new:g}),f&&m&&f!==m&&y&&u.push(y)}}catch(e){t.push(e.message)}if(u.length&&await m({keys:u}),i.length){let e=await (0,f.uK)({types:["drugs","fluids","feeds"],returnDraftsIfExist:!0}),t=[];e.data.forEach(e=>{let r=!1,a=e.drugs.map(e=>{if(i.map(e=>e.old).includes(e.key)){let t=i.filter(t=>t.old===e.key).map(e=>e.new)[0];e={...e,key:t},r=!0}return e}),s=e.fluids.map(e=>{if(i.map(e=>e.old).includes(e.key)){let t=i.filter(t=>t.old===e.key).map(e=>e.new)[0];e={...e,key:t},r=!0}return e}),d=e.feeds.map(e=>{if(i.map(e=>e.old).includes(e.key)){let t=i.filter(t=>t.old===e.key).map(e=>e.new)[0];e={...e,key:t},r=!0}return e});r&&t.push({...e,drugs:a,fluids:s,feeds:d})}),t.length&&await (0,g.uD)({data:t})}t.length?r.errors=t:r.success=!0}catch(e){r.success=!1,r.errors=[e.message],u.Z.error("_saveDrugsLibraryItems ERROR",e.message)}finally{return!r?.errors?.length&&t&&o.Z.emit("data_changed","save_drugs_library_items"),r}}async function w(){try{return await n.Z.delete(l.drugsLibraryDrafts),!0}catch(e){throw e}}async function L({itemsIds:e,broadcastAction:t}){let r={success:!1};try{let t=e||[];if(t.length){let e=await (0,y.fP)({itemsIds:t,returnDraftsIfExist:!0});await n.Z.delete(l.drugsLibraryDrafts).where((0,a.d3)(l.drugsLibraryDrafts.itemDraftId,t));let r=e.data.filter(e=>!e.isDraft).map(e=>({drugsLibraryItemId:e.itemId}));r.length&&await n.Z.insert(l.pendingDeletion).values(r),await m({keys:e.data.map(e=>e.key)})}r.success=!0}catch(e){r.success=!1,r.errors=[e.message],u.Z.error("_deleteDrugsLibraryItems ERROR",e.message)}finally{return!r?.errors?.length&&t&&o.Z.emit("data_changed","delete_drugs_library_items"),r}}async function D({previous:e,drafts:t}){try{let r=[];for(let i of t){let t={version:i?.data?.version||1,itemId:i?.data?.itemId,changes:{}};if(i?.data?.version===1)t.changes={action:"create_drugs_library_item",description:"Create drugs library item",oldValues:[],newValues:[]};else{let r=e.filter(e=>e.itemId===i?.data?.itemId)[0],a=[],s=[];Object.keys({...i?.data}).filter(e=>!["version","draft"].includes(e)).forEach(e=>{let t=i.data[e],d={...r}[e];JSON.stringify(t)!==JSON.stringify(d)&&(a.push({[e]:d}),s.push({[e]:t}))}),t.changes={action:"update_drugs_library_item",description:"Update drugs library item",oldValues:a,newValues:s}}r.push(t)}await n.Z.insert(l.drugsLibraryHistory).values(r)}catch(e){u.Z.error(e.message)}}var v=r(34149);async function Z(e){let t={success:!1};try{let e=await n.Z.query.pendingDeletion.findMany({where:(0,a.K0)(l.pendingDeletion.drugsLibraryItemId),columns:{drugsLibraryItemId:!0},with:{drugsLibraryItem:{columns:{version:!0,key:!0}}}});if((e=e.filter(e=>e.drugsLibraryItem)).length){let t=new Date;await n.Z.update(l.drugsLibrary).set({deletedAt:t,key:(0,v.i6)`CONCAT(${l.drugsLibrary.key}, '_', ${l.drugsLibrary.itemId})`}).where((0,a.d3)(l.drugsLibrary.itemId,e.map(e=>e.drugsLibraryItemId))),await n.Z.insert(l.drugsLibraryHistory).values(e.map(e=>({version:e.drugsLibraryItem.version,itemId:e.drugsLibraryItemId,changes:{action:"delete_drugs_library_item",description:"Delete drugs library item",oldValues:[{deletedAt:null,key:e.drugsLibraryItem.key}],newValues:[{deletedAt:t,key:`${e.drugsLibraryItem.key}_${e.drugsLibraryItemId}`}]}})))}await n.Z.delete(l.pendingDeletion).where((0,a.or)((0,a.K0)(l.pendingDeletion.drugsLibraryItemId),(0,a.K0)(l.pendingDeletion.drugsLibraryItemDraftId)));let r=[],i=[],s=await n.Z.query.drugsLibraryDrafts.findMany();if(r=s.filter(e=>e.itemId),i=s.filter(e=>!e.itemId),r.length){let e=[];for(let{itemId:t,data:i}of(r.filter(e=>e.itemId).length&&(e=await n.Z.query.drugsLibrary.findMany({where:(0,a.d3)(l.drugsLibrary.itemId,r.filter(e=>e.itemId).map(e=>e.itemId))})),r)){let{itemId:e,id:r,createdAt:s,updatedAt:d,deletedAt:u,...o}=i,y={...o,publishDate:new Date};await n.Z.update(l.drugsLibrary).set(y).where((0,a.eq)(l.drugsLibrary.itemId,t)).returning()}await D({drafts:r,previous:e})}if(i.length){let e=[];for(let{id:t,data:r}of(i.filter(e=>e.itemId).length&&(e=await n.Z.query.drugsLibrary.findMany({where:(0,a.d3)(l.drugsLibrary.itemId,i.filter(e=>e.itemId).map(e=>e.itemId))})),i)){let e=r.itemId||(0,d.Z)(),a={...r,itemId:e};i=i.map(r=>(r.id===t&&(r.data.itemId=e),r)),await n.Z.insert(l.drugsLibrary).values(a)}await D({drafts:i,previous:e})}await n.Z.delete(l.drugsLibraryDrafts);let u=[...r.map(e=>e.itemId),...e.map(e=>e.drugsLibraryItemId)];u.length&&await n.Z.update(l.drugsLibrary).set({version:(0,v.i6)`${l.drugsLibrary.version} + 1`}).where((0,a.d3)(l.drugsLibrary.itemId,u)),t.success=!0}catch(e){t.success=!1,t.errors=[e.message],u.Z.error("_publishDrugsLibraryItems ERROR",e.message)}finally{return t}}}};
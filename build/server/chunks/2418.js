"use strict";exports.id=2418,exports.ids=[2418],exports.modules={22418:(e,r,t)=>{t.d(r,{U5:()=>p,Ms:()=>w,Nq:()=>L,hA:()=>Z,E8:()=>c,$s:()=>b,cj:()=>I,Lr:()=>h});var i=t(60938),s=t(57745),a=t(81445),d=t(9576),u=t(57435),n=t(10413),l=t(93567),o=t(88317),y=t(30834),g=t(10970),f=t(927);async function c({keys:e,userId:r}){try{let t=await (0,f.uK)({types:["drugs","fluids","feeds"],returnDraftsIfExist:!0}),i=[];return t.data.forEach(r=>{let t=r.drugs.filter(r=>!e.includes(r.key)),s=r.fluids.filter(r=>!e.includes(r.key)),a=r.feeds.filter(r=>!e.includes(r.key));t.length!==r.drugs.length&&i.push({...r,drugs:t}),s.length!==r.fluids.length&&i.push({...r,fluids:s}),a.length!==r.feeds.length&&i.push({...r,feeds:a})}),i.length&&await (0,g.uD)({data:i,userId:r}),{data:{success:!0}}}catch(e){return{errors:[e.message],data:{success:!1}}}}let m=async(e,r=1,t="")=>{let[{count:a}]=await n.Z.select({count:(0,i.QX)()}).from(l.drugsLibraryDrafts).where((0,s.eq)(l.drugsLibraryDrafts.key,e)),[{count:d}]=await n.Z.select({count:(0,i.QX)()}).from(l.drugsLibrary).where((0,s.eq)(l.drugsLibrary.key,e));return d||a?await m(`${t||e}-${r+1}`,r+1,t||e):e};async function p({data:e,...r}){try{let{data:t}=await (0,y.fP)({itemsIds:e.map(e=>e.itemId)}),i=[];for(let e of t){let r=await m(e.key);i.push({...e,key:r,itemId:d.Z(),position:void 0,createdAt:void 0,updatedAt:void 0,deletedAt:void 0,publishDate:void 0,id:void 0})}return await b({data:i,...r})}catch(e){return u.Z.error("_copyDrugsLibraryItems ERROR",e.message),{success:!1,errors:[e.message]}}}async function I({data:e,...r}){try{let t=e.map(e=>e.key).filter(e=>e);if(t.length){let i=await (0,y.fP)({keys:t});if((e=e.filter(e=>!i.data.map(e=>e.key).includes(e.key)).map(e=>({...e,itemId:void 0,createdAt:void 0,updatedAt:void 0,deletedAt:void 0,publishDate:void 0,id:void 0,position:void 0,version:void 0}))).length)return await b({data:e,...r})}return{success:!0}}catch(e){return u.Z.error("_saveDrugsLibraryItemsIfKeysNotExist ERROR",e.message),{errors:[e.message],success:!1}}}async function h({data:e,...r}){try{let t=e.map(e=>e.key).filter(e=>e);if(t.length){let i=await (0,y.fP)({keys:t});if((e=e.map(e=>{let r=i.data.find(r=>`${r.key}`.toLowerCase()===`${e.key}`.toLowerCase());return{...e,itemId:r?.itemId||e.itemId,createdAt:void 0,updatedAt:void 0,deletedAt:void 0,publishDate:void 0,id:r?.id||e.id,position:r?.position||e.position,version:r?.version||e.version}})).length)return await b({data:e,...r})}return{success:!0}}catch(e){return u.Z.error("_saveDrugsLibraryItemsAndUpdateIfExists ERROR",e.message),{errors:[e.message],success:!1}}}async function b({data:e,broadcastAction:r,userId:t}){let i={success:!1};try{let r=[],u=[],o=[];for(let{itemId:i,...y}of e)try{let e=i||d.Z(),g="",f=y.key||"",c=null,m=y.type||null;if(!r.length){let r=i?await n.Z.query.drugsLibraryDrafts.findFirst({where:(0,s.eq)(l.drugsLibraryDrafts.itemDraftId,e)}):null,d=r||!i?null:await n.Z.query.drugsLibrary.findFirst({where:(0,s.eq)(l.drugsLibrary.itemId,e)});if(r){g=r.data.key,c=r.data.type||null;let t={...r.data,...y};await n.Z.update(l.drugsLibraryDrafts).set({data:t,position:t.position}).where((0,s.eq)(l.drugsLibraryDrafts.itemDraftId,e))}else{g=d?.key||"",c=d?.type||null;let r=y.position||d?.position;if(!r){let e=await n.Z.query.drugsLibrary.findFirst({columns:{position:!0},orderBy:(0,a.C)(l.drugsLibrary.position)}),t=await n.Z.query.drugsLibraryDrafts.findFirst({columns:{position:!0},orderBy:(0,a.C)(l.drugsLibraryDrafts.position)});r=Math.max(0,e?.position||0,t?.position||0)+1}let i={...d,...y,itemId:e,version:d?.version?d.version+1:1,position:r};await n.Z.insert(l.drugsLibraryDrafts).values({data:i,itemDraftId:e,position:i.position,itemId:d?.itemId,key:i.key,type:i.type,createdByUserId:t})}g&&f&&g!==f&&u.push({old:g,new:f}),c&&m&&c!==m&&g&&o.push(g)}}catch(e){r.push(e.message)}if(o.length&&await c({keys:o,userId:t}),u.length){let e=await (0,f.uK)({types:["drugs","fluids","feeds"],returnDraftsIfExist:!0}),r=[];e.data.forEach(e=>{let t=!1,i=e.drugs.map(e=>{if(u.map(e=>e.old).includes(e.key)){let r=u.filter(r=>r.old===e.key).map(e=>e.new)[0];e={...e,key:r},t=!0}return e}),s=e.fluids.map(e=>{if(u.map(e=>e.old).includes(e.key)){let r=u.filter(r=>r.old===e.key).map(e=>e.new)[0];e={...e,key:r},t=!0}return e}),a=e.feeds.map(e=>{if(u.map(e=>e.old).includes(e.key)){let r=u.filter(r=>r.old===e.key).map(e=>e.new)[0];e={...e,key:r},t=!0}return e});t&&r.push({...e,drugs:i,fluids:s,feeds:a})}),r.length&&await (0,g.uD)({data:r,userId:t})}r.length?i.errors=r:i.success=!0}catch(e){i.success=!1,i.errors=[e.message],u.Z.error("_saveDrugsLibraryItems ERROR",e.message)}finally{return!i?.errors?.length&&r&&o.Z.emit("data_changed","save_drugs_library_items"),i}}async function w(e){try{return await n.Z.delete(l.drugsLibraryDrafts).where(e?.userId?(0,s.eq)(l.drugsLibraryDrafts.createdByUserId,e.userId):void 0),!0}catch(e){throw e}}async function L({itemsIds:e,broadcastAction:r,userId:t}){let i={success:!1};try{let r=e||[];if(r.length){let e=await (0,y.fP)({itemsIds:r,returnDraftsIfExist:!0});await n.Z.delete(l.drugsLibraryDrafts).where((0,s.d3)(l.drugsLibraryDrafts.itemDraftId,r));let i=e.data.filter(e=>!e.isDraft).map(e=>({drugsLibraryItemId:e.itemId,createdByUserId:t}));i.length&&await n.Z.insert(l.pendingDeletion).values(i),await c({keys:e.data.map(e=>e.key),userId:t})}i.success=!0}catch(e){i.success=!1,i.errors=[e.message],u.Z.error("_deleteDrugsLibraryItems ERROR",e.message)}finally{return!i?.errors?.length&&r&&o.Z.emit("data_changed","delete_drugs_library_items"),i}}async function v({previous:e,drafts:r}){try{let t=[];for(let i of r){let r={version:i?.data?.version||1,itemId:i?.data?.itemId,changes:{}};if(i?.data?.version===1)r.changes={action:"create_drugs_library_item",description:"Create drugs library item",oldValues:[],newValues:[]};else{let t=e.filter(e=>e.itemId===i?.data?.itemId)[0],s=[],a=[];Object.keys({...i?.data}).filter(e=>!["version","draft"].includes(e)).forEach(e=>{let r=i.data[e],d={...t}[e];JSON.stringify(r)!==JSON.stringify(d)&&(s.push({[e]:d}),a.push({[e]:r}))}),r.changes={action:"update_drugs_library_item",description:"Update drugs library item",oldValues:s,newValues:a}}t.push(r)}await n.Z.insert(l.drugsLibraryHistory).values(t)}catch(e){u.Z.error(e.message)}}var D=t(34149);async function Z(e){let r={success:!1};try{let t=await n.Z.query.pendingDeletion.findMany({where:(0,s.xD)((0,s.K0)(l.pendingDeletion.drugsLibraryItemId),e?.userId?(0,s.eq)(l.pendingDeletion.createdByUserId,e.userId):void 0),columns:{drugsLibraryItemId:!0},with:{drugsLibraryItem:{columns:{version:!0,key:!0}}}});if((t=t.filter(e=>e.drugsLibraryItem)).length){let e=new Date;await n.Z.update(l.drugsLibrary).set({deletedAt:e,key:(0,D.i6)`CONCAT(${l.drugsLibrary.key}, '_', ${l.drugsLibrary.itemId})`}).where((0,s.d3)(l.drugsLibrary.itemId,t.map(e=>e.drugsLibraryItemId))),await n.Z.insert(l.drugsLibraryHistory).values(t.map(r=>({version:r.drugsLibraryItem.version,itemId:r.drugsLibraryItemId,changes:{action:"delete_drugs_library_item",description:"Delete drugs library item",oldValues:[{deletedAt:null,key:r.drugsLibraryItem.key}],newValues:[{deletedAt:e,key:`${r.drugsLibraryItem.key}_${r.drugsLibraryItemId}`}]}})))}await n.Z.delete(l.pendingDeletion).where((0,s.xD)((0,s.or)((0,s.K0)(l.pendingDeletion.drugsLibraryItemId),(0,s.K0)(l.pendingDeletion.drugsLibraryItemDraftId)),e?.userId?(0,s.eq)(l.pendingDeletion.createdByUserId,e.userId):void 0));let i=[],a=[],u=await n.Z.query.drugsLibraryDrafts.findMany({where:e?.userId?(0,s.eq)(l.drugsLibraryDrafts.createdByUserId,e?.userId):void 0});if(i=u.filter(e=>e.itemId),a=u.filter(e=>!e.itemId),i.length){let e=[];for(let{itemId:r,data:t}of(i.filter(e=>e.itemId).length&&(e=await n.Z.query.drugsLibrary.findMany({where:(0,s.d3)(l.drugsLibrary.itemId,i.filter(e=>e.itemId).map(e=>e.itemId))})),i)){let{itemId:e,id:i,createdAt:a,updatedAt:d,deletedAt:u,...o}=t,y={...o,publishDate:new Date};await n.Z.update(l.drugsLibrary).set(y).where((0,s.eq)(l.drugsLibrary.itemId,r)).returning()}await v({drafts:i,previous:e})}if(a.length){let e=[];for(let{id:r,data:t}of(a.filter(e=>e.itemId).length&&(e=await n.Z.query.drugsLibrary.findMany({where:(0,s.d3)(l.drugsLibrary.itemId,a.filter(e=>e.itemId).map(e=>e.itemId))})),a)){let e=t.itemId||(0,d.Z)(),i={...t,itemId:e};a=a.map(t=>(t.id===r&&(t.data.itemId=e),t)),await n.Z.insert(l.drugsLibrary).values(i)}await v({drafts:a,previous:e})}await n.Z.delete(l.drugsLibraryDrafts);let o=[...i.map(e=>e.itemId),...t.map(e=>e.drugsLibraryItemId)];o.length&&await n.Z.update(l.drugsLibrary).set({version:(0,D.i6)`${l.drugsLibrary.version} + 1`}).where((0,s.d3)(l.drugsLibrary.itemId,o)),r.success=!0}catch(e){r.success=!1,r.errors=[e.message],u.Z.error("_publishDrugsLibraryItems ERROR",e.message)}finally{return r}}}};
// COLORS
$colors: (
  primary: (rgb(33,150,243), #fff),
  secondary: (#222f3e, #fff),
  grey: (#999, #000),
  lightGrey: (#dbdbdb, #999),
  faintGrey: (#f2f3f5, #555),
  success: (#0be881, #fff),
  danger: (#992337, #fff),
  copy: (#333, #fff)
);

@function getUIColors() {
  @if variable-exists(uiColors) {
    @return map-merge($colors, $uiColors);
  }
  @return $colors;
}

@function uiColor($key: 'primary', $index: 1) {
  @return nth(map-get(getUIColors(), $key), $index);
}

// BASE PATH
@function getBasePath() {
  @if variable-exists(uiPath) {
    @return $uiPath;
  }
  @return '.';
}

/* FONT SIZES */
$fontSizes: (
  defaultTextSize: 18px,
  smTextSize: 16px,
  xsTextSize: 12px
);

@function getUIFontSizes() {
  @if variable-exists(uiFontSizes) {
    @return map-merge($fontSizes, $uiFontSizes);
  }
  @return $fontSizes;
}

@function getUIFontSize($key: 'defaultText') {
  @return map-get(getFontSizes(), $key);
}

/*****************/
@function join-string($str, $join: "") {
  @while (str-index($str, ' ') != null) {
    $index: str-index($str, ' ');
    $str: "#{str-slice($str, 0, $index - 1)}#{unquote($join)}#{str-slice($str, $index + 1)}";
  }
  @return $str;
}

@function str-replace($str, $target, $replaceWith) {
  @while (str-index($str, $target) != null) {
    $index: str-index($str, $target);
    $str: "#{str-slice($str, 0, $index - 1)}#{unquote($replaceWith)}#{str-slice($str, $index + 1)}";
  }
  @return $str;
}

/*************/
